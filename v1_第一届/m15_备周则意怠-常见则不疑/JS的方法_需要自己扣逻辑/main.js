module.exports = loadWebAssembly

loadWebAssembly.supported = typeof WebAssembly !== 'undefined'

function loadWebAssembly (opts) {
  if (!loadWebAssembly.supported) return null

  var imp = opts && opts.imports
  var wasm = toUint8Array('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ZGVidWdfYWJicmV2AREBJQ4TBQMOEBcbDhEBEgYAAAIuAREBEgYDDjoLOwsnGUkTPxkAAAMFAAIYAw46CzsLSRMAAAQ0AAIYAw46CzsLSRMAAAULAREBEgYAAAYkAAMOPgsLCwAAAADCBgsuZGVidWdfbGluZTIDAAAEADcAAAABAQH7Dg0AAQEBAQAAAAEAAAEvdG1wL2J1aWxkX21wOTNvazd0ejhiLiQAAGZpbGUuYwABAAAAAAUCBgAAABUFCgoCMRN1dXV1dXUFDXYGA3N0BREDDYIFEnQFBeQDc5AFDQYDDnQFDwZ0BQ3kBQ8GrQYDcQiCBQ0GAxGCBQ8GdAUN5AUPBq0GA24IggUNBgMUggUPBnQFDeQFDwatBgNrCIIFDQYDF4IFDwZ0BQ3kBQ8GrQYDaAiCBQ0GAxqCBRUGdAUN5AUVBq0GA2UIggUNBgMdggUVBnQFDeQFFQatBgNiCIIFEgYDIboFFAZ0BRCsBRQGdQUYBnQFFnQFH3QFHnQFJKwFInQFG3QFEHQGdQUVCIMFGQZ0BRd0BR90BSV0BSR0BSKsBRx0BSt0BRCsBRMGCEwFGQZ0BRd0BR50BRx0BRF0BnUFFAiDBRkGdAUWdAUhdAUsdAUqdAUjdAUedAURdAUNBnUFFQZ0BQ3kBRUGrQYDVgiCBQ0GAyyCBRUGdAUN5AUVBq0GA1MI1gURBgMw1gUTCNcFGAaCBR2CBRyCBRrkBRWeBRGeBQ0GgwUSBoIFF4IFFoIFFOQFD54FC54FDwaDBRMGggURggUangUZggUf5AUdggUWngULngUQBoMFFQaCBRKCBR2eBSiCBSaCBR+eBRqeBQ2eBoQFEQaCBQ0IWAURBtcGA0kI1gUNBgM5kAURBoIFDQhYBREG1wYDRgjWBRAGAzzkBRUGggUSggUdngUoggUmggUfngUangUNngaDBREGggUNCFgFEQbXBgNCCNYFDQYDwACQBREGggUNCFgFEQbXBgO/fwjWBQ4GA8MAkAUTBoIFGIIFF4IFFeQFEJ4FDJ4FEwaDBRwGggUaggUmngUkggUwngUuggU6ngU4ggVEngVCggVIngVGggVMngVKggUQngUNBoMFFAaCBQ0IWAUUBtcGA7p/CNYFDQYDyACQBRQGggUNCFgFFAbXBgO3fwjWBRcGAw0gBQUGCNYuBQ4GA8AALgUXBoIFFYIFHp4FI+QFIYIFLZ4FK4IFN54FNYIFO54FOYIFPZ4FBeQCBQABAQCuAQouZGVidWdfc3RyY2xhbmcgdmVyc2lvbiA4LjAuMCAodHJ1bmsgMzQxOTYwKQAvdG1wL2J1aWxkX21wOTNvazd0ejhiLiQvZmlsZS5jAC90bXAvYnVpbGRfbXA5M29rN3R6OGIuJABlbmNvZGUAbG9uZyBpbnQAYwBkAGtleQB2aQByZXN1bHQAbWlkZGxlAG1pZGRsZTIAbWlkZGxlMwBtaWRkbGU0AGkAaW50AAAjBG5hbWUBHAIAEV9fd2FzbV9jYWxsX2N0b3JzAQZlbmNvZGU=')
  var ready = null

  var mod = {
    buffer: wasm,
    memory: null,
    exports: null,
    realloc: realloc,
    onload: onload
  }

  onload(function () {})

  return mod

  function realloc (size) {
    mod.exports.memory.grow(Math.max(0, Math.ceil(Math.abs(size - mod.memory.length) / 65536)))
    mod.memory = new Uint8Array(mod.exports.memory.buffer)
  }

  function onload (cb) {
    if (mod.exports) return cb()

    if (ready) {
      ready.then(cb.bind(null, null)).catch(cb)
      return
    }

    try {
      if (opts && opts.async) throw new Error('async')
      setup({instance: new WebAssembly.Instance(new WebAssembly.Module(wasm), imp)})
    } catch (err) {
      ready = WebAssembly.instantiate(wasm, imp).then(setup)
    }

    onload(cb)
  }

  function setup (w) {
    mod.exports = w.instance.exports
    mod.memory = mod.exports.memory && mod.exports.memory.buffer && new Uint8Array(mod.exports.memory.buffer)
  }
}

function toUint8Array (s) {
  if (typeof atob === 'function') return new Uint8Array(atob(s).split('').map(charCodeAt))
  return (require('buf' + 'fer').Buffer).from(s, 'base64')
}

function charCodeAt (c) {
  return c.charCodeAt(0)
}
